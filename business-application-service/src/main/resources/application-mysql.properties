#
# https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#common-application-properties
#
#server configuration
server.address=0.0.0.0
server.port=8090
cxf.path=/rest

# When this property is set to true, KIE Server uses the class loader used by the container to load KJAR files and their dependencies. 
kieserver.classPathContainer=true
# When this property is set to true, KIE Server deploys all KJAR modules available in the application, whether they are declared programmatically or through the Maven plug-in.
kieserver.autoScanDeployments=false

kieserver.deployments[0].alias=kcontainer
kieserver.deployments[0].containerId=kcontainer
kieserver.deployments[0].artifactId=business-application-kjar
kieserver.deployments[0].groupId=com.redhat
kieserver.deployments[0].version=1.0.0

#kie server config
kieserver.serverId=business-application-service
kieserver.serverName=business-application-service
kieserver.location=http://localhost:8090/rest/server
#kieserver.controllers=http://localhost:8080/business-central/rest/controller

#kie server capabilities
kieserver.drools.enabled=true
kieserver.dmn.enabled=true
kieserver.jbpm.enabled=true
kieserver.jbpmui.enabled=true
kieserver.casemgmt.enabled=true
#kieserver.optaplanner.enabled=true
#kieserver.prometheus.enabled=true
#kieserver.scenariosimulation.enabled=true

#jbpm configuration
jbpm.executor.enabled=true
jbpm.executor.retries=5
jbpm.executor.interval=3
jbpm.executor.threadPoolSize=1
jbpm.executor.timeUnit=SECONDS

#data source configuration
spring.datasource.username=rhpam
spring.datasource.password=Admin_123
spring.datasource.url=jdbc:mysql://192.168.1.62:3306/rhpam7132_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.jdbc.jdbc2.optional.MysqlXADataSource
spring.datasource.xa.properties.driver-class-name=com.mysql.jdbc.Driver

#hibernate configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.properties.hibernate.id.new_generator_mappings=false
#spring.jpa.properties.hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform

#transaction manager configuration
spring.jta.narayana.transaction-manager-id=1

#banner
spring.banner.location=classpath:banner.txt

# Optional: Set transaction isolation level
#1 = TRANSACTION_READ_UNCOMMITTED
#2 = TRANSACTION_READ_COMMITTED
#4 = TRANSACTION_REPEATABLE_READ
#8 = TRANSACTION_SERIALIZABLE
#spring.jpa.properties.hibernate.connection.isolation=2

#transaction manager configuration
narayana.dbcp.enabled=true
narayana.dbcp.initialSize=20
narayana.dbcp.maxTotal=70
#narayana.dbcp.maxTotal=20
narayana.defaultTimeout=1800
#narayana.defaultTimeout=30
#spring.jta.narayana.default-timeout=300
narayana.dbcp.maxIdle=70
narayana.dbcp.maxWaitMillis=30000

# The spring.jpa.open-in-view property in a Spring Boot application controls the Open Session in View (OSIV) or Open EntityManager in View pattern when using JPA (Java Persistence API). This property impacts how the persistence context (such as Hibernate’s Session or JPA’s EntityManager) is handled during a web request lifecycle.
spring.jpa.open-in-view=false

# Show SQL queries
#spring.jpa.show-sql=true

# Log formatted SQL queries
#spring.jpa.properties.hibernate.format_sql=true

# Log SQL queries in the application log (with query parameters)
#logging.level.org.hibernate.SQL=DEBUG

# Log SQL query parameters
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
#logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE
#logging.level.org.kie.server.services=TRACE

kieserver.swagger.enabled=true

